<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-LARUOSJ" failures="2" tests="95" name="Surefire test" time="5.886" errors="0" timestamp="2025-07-20T15:07:29 NPT">
  <testcase classname="Authentication.LogoutTest" name="@BeforeClass LogIn" time="0.301">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;401&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Authentication.LogoutTest.LogIn(LogoutTest.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass LogIn -->
  <testcase classname="Pin.ChangePinTest" name="@BeforeClass LogIn" time="0.216">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;401&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Pin.ChangePinTest.LogIn(ChangePinTest.java:33)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass LogIn -->
  <testcase classname="Pin.ChangePinTest" name="@AfterClass logOut" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass logOut -->
  <testcase classname="Profile.documentUploadTest" name="@BeforeClass LogIn" time="0.274">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;401&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Profile.documentUploadTest.LogIn(documentUploadTest.java:34)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass LogIn -->
  <testcase classname="Profile.getProfileTest" name="@BeforeClass LogIn" time="0.433">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;401&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Profile.getProfileTest.LogIn(getProfileTest.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass LogIn -->
  <testcase classname="Profile.selfieUploadTest" name="@BeforeClass LogIn" time="0.222">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;401&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Profile.selfieUploadTest.LogIn(selfieUploadTest.java:33)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass LogIn -->
  <testcase classname="Profile.UpdateProfileTest" name="@BeforeClass LogIn" time="0.264">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;401&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Profile.UpdateProfileTest.LogIn(UpdateProfileTest.java:29)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass LogIn -->
  <testcase classname="Profile.UpdateProfileTest" name="@AfterClass logOut" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass logOut -->
  <testcase classname="Authentication.authenticateTest" name="AuthenticateWithInvalidDevice" time="0.672"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticateWithInvalidLocation" time="0.254"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticateWithNoDevice" time="0.349"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticateWithNoLocation" time="0.326"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticateWithNoUserAgent" time="0.271"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticatewithInvalidEmail" time="0.347"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticatewithInvalidPin" time="0.365"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticatewithMissingEmail" time="0.36">
    <failure type="java.lang.AssertionError" message="expected [Email cannot be blank..] but found [Email cannot be blank.]">
      <![CDATA[java.lang.AssertionError: expected [Email cannot be blank..] but found [Email cannot be blank.]
at Authentication.authenticateTest.AuthenticatewithMissingEmail(authenticateTest.java:214)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- AuthenticatewithMissingEmail -->
  <testcase classname="Authentication.authenticateTest" name="AuthenticatewithMissingPin" time="0.352"/>
  <testcase classname="Authentication.authenticateTest" name="AuthenticatewithWrongPin" time="0.271"/>
  <testcase classname="Authentication.authenticatevalidTest" name="authenticatewithValidCredentials" time="0.335">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;401&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <401>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Authentication.authenticatevalidTest.authenticatewithValidCredentials(authenticatevalidTest.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- authenticatewithValidCredentials -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithInvalidAuth" time="0.001">
    <skipped/>
  </testcase> <!-- logoutwithInvalidAuth -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithInvalidDevice" time="0.0">
    <skipped/>
  </testcase> <!-- logoutwithInvalidDevice -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithInvalidLocation" time="0.001">
    <skipped/>
  </testcase> <!-- logoutwithInvalidLocation -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithInvalidUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- logoutwithInvalidUserAgent -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- logoutwithValidCredentials -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithoutAuth" time="0.001">
    <skipped/>
  </testcase> <!-- logoutwithoutAuth -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithoutDevice" time="0.0">
    <skipped/>
  </testcase> <!-- logoutwithoutDevice -->
  <testcase classname="Authentication.LogoutTest" name="logoutwithoutLocation" time="0.0">
    <skipped/>
  </testcase> <!-- logoutwithoutLocation -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenInvalidSignature" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenInvalidSignature -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenNewPinCriteria" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenNewPinCriteria -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenNewPinEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenNewPinEmpty -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenNewPinPlain" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenNewPinPlain -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenOldPinEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenOldPinEmpty -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenOldPinIncorrect" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenOldPinIncorrect -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenOldPinPlain" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenOldPinPlain -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenOldPinSamewithNewPin" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenOldPinSamewithNewPin -->
  <testcase classname="Pin.ChangePinTest" name="changePinwhenSignatureEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwhenSignatureEmpty -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithInvalidAuth" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithInvalidAuth -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithInvalidDevice" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithInvalidDevice -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithInvalidLocation" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithInvalidLocation -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithInvalidUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithInvalidUserAgent -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithValidCredentials -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithoutAuth" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithoutAuth -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithoutDeviceId" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithoutDeviceId -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithoutLocation" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithoutLocation -->
  <testcase classname="Pin.ChangePinTest" name="changePinwithoutUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- changePinwithoutUserAgent -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithExpiredDocument" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithExpiredDocument -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithInvalidAuth" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithInvalidAuth -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithInvalidDevice" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithInvalidDevice -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithInvalidImage" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithInvalidImage -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithInvalidLocation" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithInvalidLocation -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithUnclearDocument" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithUnclearDocument -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithValidImage" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithValidImage -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithdifferentpersonDocument" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithdifferentpersonDocument -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithoutAuth" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithoutAuth -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithoutDevice" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithoutDevice -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithoutLocation" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithoutLocation -->
  <testcase classname="Profile.documentUploadTest" name="documentUploadwithoutUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- documentUploadwithoutUserAgent -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithInvalidAuth" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithInvalidAuth -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithInvalidDevice" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithInvalidDevice -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithInvalidLocation" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithInvalidLocation -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithInvalidUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithInvalidUserAgent -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithValidCredentials -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithoutAuth" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithoutAuth -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithoutDevice" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithoutDevice -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithoutLocation" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithoutLocation -->
  <testcase classname="Profile.getProfileTest" name="getProfilewithoutUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- getProfilewithoutUserAgent -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithDarkImage" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithDarkImage -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithEyesClosed" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithEyesClosed -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithFaceObstruct" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithFaceObstruct -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithInvalidAuth" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithInvalidAuth -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithInvalidDevice" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithInvalidDevice -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithInvalidImage" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithInvalidImage -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithInvalidLocation" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithInvalidLocation -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithOpenedMouthImage" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithOpenedMouthImage -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithSpoofImage" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithSpoofImage -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithValidImage" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithValidImage -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithoutAuth" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithoutAuth -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithoutDevice" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithoutDevice -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithoutLocation" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithoutLocation -->
  <testcase classname="Profile.selfieUploadTest" name="selfieUploadwithoutUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- selfieUploadwithoutUserAgent -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidAuth" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidAuth -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidCountry" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidCountry -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidDateOfBirth" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidDateOfBirth -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidDevice" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidDevice -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidDocumentNumber" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidDocumentNumber -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidDocumentType" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidDocumentType -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidExpiryDate" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidExpiryDate -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidGender" time="0.001">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidGender -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidLocation" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidLocation -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidSignature" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidSignature -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithInvalidUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithInvalidUserAgent -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithValidParameters" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithValidParameters -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutAuth" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutAuth -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutCountry" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutCountry -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutDateofBirth" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutDateofBirth -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutDocumentNumber" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutDocumentNumber -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutDocumentType" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutDocumentType -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutFullName" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutFullName -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutGender" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutGender -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutLocation" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutLocation -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutSignature" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutSignature -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutUserAgent" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutUserAgent -->
  <testcase classname="Profile.UpdateProfileTest" name="updateProfilewithoutdevice" time="0.0">
    <skipped/>
  </testcase> <!-- updateProfilewithoutdevice -->
</testsuite> <!-- Surefire test -->
